int WINAPI PSGetUSBDevNum(int* iNums);
int WINAPI PSGetUDiskNum(int* iNums); 
int WINAPI PSOpenDeviceEx(HANDLE* pHandle, int nDeviceType,int iCom=1,int iBaud=1,int nPackageSize=2,int iDevNum=0);
int WINAPI PSCloseDeviceEx(HANDLE hHandle);
int WINAPI JPSetPackSize(HANDLE hHandle=NULL, int nPackSize=2);
int WINAPI PSAutoOpen(HANDLE* pHandle,int* type, int nAddr=0xFFFFFFFF,UINT uPwd=0x00,int bVfy=1);
int WINAPI PSGetImage(HANDLE hHandle,int nAddr);
int WINAPI PSGetImage_Enroll(HANDLE hHandle,int nAddr);	
int WINAPI PSGenChar(HANDLE hHandle,int nAddr,int iBufferID);
int WINAPI PSMatch(HANDLE hHandle,int nAddr,int* iScore);
int WINAPI PSSearch(HANDLE hHandle,int nAddr,int iBufferID, int iStartPage, int iPageNum, int* iMbAddress,int* iscore=NULL);
int	WINAPI PSRegModule(HANDLE hHandle,int nAddr);
int WINAPI PSStoreChar(HANDLE hHandle,int nAddr,int iBufferID, int iPageID);
int WINAPI PSLoadChar(HANDLE hHandle,int nAddr,int iBufferID,int iPageID);
int WINAPI PSUpChar(HANDLE hHandle,int nAddr,int iBufferID, unsigned char* pTemplet, int* iTempletLength);
int WINAPI PSDownChar(HANDLE hHandle,int nAddr,int iBufferID, unsigned char* pTemplet, int iTempletLength);
int WINAPI PSDownChar_Test(HANDLE hHandle,int nAddr,int iBufferID, unsigned char* pTemplet, int iTempletLength,int nAddr1,int ipack=MAX_PACKAGE_SIZE_,WORD whead=0xEF01,WORD wCheck=0x0000,int iErr=0);
int WINAPI PSUpImage(HANDLE hHandle,int nAddr,unsigned char* pImageData, int* iImageLength);
int WINAPI PSDownImage(HANDLE hHandle,int nAddr,unsigned char* pImageData, int iLength);
int WINAPI PSImgData2BMP(unsigned char* pImgData,const char* pImageFile);
int WINAPI PSGetImgDataFromBMP(HANDLE hHandle,const char* pImageFile,unsigned char* pImageData,int* pnImageLen);
int WINAPI PSDelChar(HANDLE hHandle,int nAddr,int iStartPageID,int nDelPageNum);
int WINAPI PSEmpty(HANDLE hHandle,int nAddr);
int WINAPI PSReadParTable(HANDLE hHandle,int nAddr,unsigned char* pParTable);
int WINAPI PSReadInfPage(HANDLE hHandle,int nAddr, unsigned char* pInf);
int WINAPI PSHighSpeedSearch(HANDLE hHandle,int nAddr,int iBufferID, int iStartPage, int iPageNum, int* iMbAddress,int* iscore=NULL);
int WINAPI PSTemplateNum(HANDLE hHandle,int nAddr,int* iMbNum);
int WINAPI PSGenBinImage(HANDLE hHandle,int nAddr, int nImgType);
int WINAPI PSPowerDown(HANDLE hHandle,int nAddr);
int WINAPI PSSetPwd(HANDLE hHandle,int nAddr,unsigned char* pPassword);
int WINAPI PSVfyPwd(HANDLE hHandle,int nAddr,unsigned char* pPassword);
int WINAPI PSReset(HANDLE hHandle,int nAddr);
int WINAPI PSReadInfo(HANDLE hHandle,int nAddr,int nPage,unsigned char* UserContent);
int WINAPI PSWriteInfo(HANDLE hHandle,int nAddr,int nPage,unsigned char* UserContent);
int WINAPI PSEnroll(HANDLE hHandle,int nAddr,int* nID);
int WINAPI PSWriteReg(HANDLE hHandle,int nAddr,int iRegAddr,int iRegValue);
int WINAPI PSSetBaud(HANDLE hHandle,int nAddr,int nBaudNum);
int WINAPI PSSetSecurLevel(HANDLE hHandle,int nAddr,int nLevel);
int WINAPI PSSetPacketSize(HANDLE hHandle,int nAddr,int nSize);
int WINAPI PSUpChar2File(HANDLE hHandle,int nAddr,int iBufferID, const char* pFileName);
int WINAPI PSDownCharFromFile(HANDLE hHandle,int nAddr,int iBufferID, const char* pFileName);
int WINAPI PSGetRandomData(HANDLE hHandle,int nAddr,unsigned char* pRandom);
int WINAPI PSSetChipAddr(HANDLE hHandle,int nAddr,unsigned char* pChipAddr);
int WINAPI PSIdentify(HANDLE hHandle,int nAddr,int* iMbAddress);	
int WINAPI PSDoUserDefine(HANDLE hHandle,int nAddr,int GPIO,int STATE);
int WINAPI PSUpdatOnline(HANDLE hHandle,int nAddr,unsigned char* pImageData, int iLength);
int WINAPI PSBurnCode(HANDLE hHandle,int nAddr,int nType,unsigned char* pImageData, int iLength);
int WINAPI PSPortControl(HANDLE hHandle,int nAddr,BOOL bOpen);
int WINAPI PSFingerData2BMPData(unsigned char* pFingerData, unsigned char* pBMPData,int* nBMPDataLen);
int WINAPI PSShowFingerData(HWND hWnd,unsigned char *pFingerData);
int WINAPI PSReadIndexTable(HANDLE hHandle,int nAddr,int nPage,unsigned char* UserContent);
int	WINAPI PS_SB(HANDLE hHandle,int nAddr,unsigned char* pSendData,int iLen,unsigned char* pRecvData,int* pRecvLen,int flag=1);